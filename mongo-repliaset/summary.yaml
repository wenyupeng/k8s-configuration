---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret

type: Opaque
data:
  # echo -n 'root' | base64
  mongo-root-username: cm9vdA==
  # echo -n 'Chris' | base64
  mongo-root-password: Q2hyaXMK
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  clusterIP: None
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  serviceName: "mongodb-service"
  replicas: 3
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      initContainers:
        - name: mongo-init
          image: mongo:latest
          env:
            - name: MONGO_REPLICA_SET_NAME
              value: "rs0"
            - name: MONGODB_SERVICE_NAME
              value: "mongodb-service"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          # Use command + args instead of "script"
          command: ["/bin/bash", "-c"]
          args:
            - |
              #!/bin/bash
              set -o errexit
              echo "Waiting for all MongoDB members to be ready..."
              MEMBERS=$(seq 0 $(( ${REPLICAS:-3} - 1 )) )
              for i in $MEMBERS; do
                until nc -z -w 2 ${MONGODB_SERVICE_NAME}-$i.${MONGODB_SERVICE_NAME}.${NAMESPACE}.svc.cluster.local 27017; do
                  echo "Waiting for ${MONGODB_SERVICE_NAME}-$i..."
                  sleep 2
                done
              done
              echo "All members ready, initializing replica set..."
              mongosh --eval "rs.initiate({ _id: \"$MONGO_REPLICA_SET_NAME\", members: $(for i in $MEMBERS; do printf "{_id:%s,host: \\\"%s-%s.%s.%s.svc.cluster.local:27017\\\"}, " "$i" "$MONGODB_SERVICE_NAME" "$i" "$MONGODB_SERVICE_NAME" "$NAMESPACE"; done | sed 's/, $//') })"
      containers:
        - name: mongodb
          image: mongo:latest
          command:
            - mongod
            - "--replSet"
            - rs0
            - "--bind_ip_all"
          ports:
            - containerPort: 27017
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongodb-secret
                  key: mongo-root-password
          volumeMounts:
            - name: mongodb-storage
              mountPath: /data/db
            - name: keyfile
              mountPath: /etc/mongodb-keyfile
              readOnly: true
      volumes:
        - name: keyfile
          secret:
            secretName: mongodb-keyfile
            defaultMode: 0400
  volumeClaimTemplates:
    - metadata:
        name: mongodb-storage   # must match your volumeMounts name
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
---